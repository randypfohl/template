ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '8.7.2'
versions.androidx_activity = '1.9.3'
versions.androidx_core_ktx = "1.15.0"
versions.androidx_constraint_layout = "2.2.0"
versions.androidx_exifinterface = "1.3.7"
versions.androidx_fragment = "1.8.5"
versions.androidx_lifecycle = "2.8.7"
versions.androidx_navigation = "2.8.3"
versions.androidx_preference = "1.2.1"
versions.androidx_test_espresso = "3.6.1"
versions.androidx_test_junit = "1.2.1"
versions.androidx_test_orchestrator = "1.5.1"
versions.androidx_test_uiautomator = "2.3.0"
versions.dagger = "2.52"
versions.junit = "4.12"
versions.kotlin = "2.0.21"
versions.kotlin_coroutines = "1.9"
versions.ktlint = "1.4.1"
versions.google_play = "1.10.3"
versions.glide = "5.0.0-rc01"
versions.mockito = "5.14.2"
versions.okhttp_logging_interceptor = "4.12.0"
versions.paging = "3.3.2"
versions.retrofit = "2.11.0"
versions.room = "2.6.1"
versions.spotless = "6.25.0"
ext.versions = versions

// Build
def config = [:]
config.applicationId = "com.pfohl.template"
ext.config = config

def modules = [:]
modules.app = ":app"
ext.modules = modules

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
ext.build_versions = build_versions

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos

// Dependencies
def android = [:]
android.activity_ktx = "androidx.activity:activity-ktx:$versions.androidx_activity"
android.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
android.play_core = "com.google.android.play:core:$versions.google_play"
android.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint_layout"
android.exifInterface = "androidx.exifinterface:exifinterface:$versions.androidx_exifinterface"
deps.android = android

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.androidx_test_espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.androidx_test_espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.androidx_test_espresso"
espresso.web = "androidx.test.espresso:espresso-web:$versions.androidx_test_espresso"
espresso.idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.androidx_test_espresso"
deps.espresso = espresso

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def junit = [:]
junit.junit = "junit:junit:$versions.junit"
junit.ext = "androidx.test.ext:junit:$versions.androidx_test_junit"
deps.junit = junit

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
deps.dagger = dagger

def kotlin = [:]
kotlin.core = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
kotlin.coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.androidx_lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidx_lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.androidx_lifecycle"
deps.lifecycle = lifecycle

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
deps.mockito = mockito

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.androidx_navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.androidx_navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.androidx_navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.androidx_navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.androidx_navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.androidx_navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidx_navigation"
deps.navigation = navigation

def paging = [:]
paging.ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.paging = paging

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
deps.retrofit = retrofit

def room = [:]
room.compiler = "androidx.room:room-compiler:$versions.room"
room.kotlin = "androidx.room:room-ktx:$versions.room"
room.runtime = "androidx.room:room-runtime:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def spotless = [:]
spotless.plugin = "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotless"
deps.spotless = spotless

def support = [:]
support.core_ktx = "androidx.core:core-ktx:$versions.androidx_core_ktx"
support.navigation_fragment = "androidx.navigation:navigation-fragment-ktx:$versions.androidx_navigation"
support.navigation_ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.androidx_navigation"
support.preference = "androidx.preference:preference-ktx:$versions.androidx_preference"
support.fragment_runtime = "androidx.fragment:fragment:$versions.androidx_fragment"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:$versions.androidx_fragment"
support.fragment_testing = "androidx.fragment:fragment-testing:$versions.androidx_fragment"
deps.support = support

def testing = [:]
testing.orchestrator = "androidx.test:orchestrator:$versions.androidx_test_orchestrator"
testing.automator = "androidx.test.uiautomator:uiautomator:$versions.androidx_test_uiautomator"
deps.testing = testing

ext.deps = deps